[gcode_macro TOOLCHANGER_CONFIG]
description: Set the tollchanger configuration
# Distance in Y in order to dock the toolhead. This is the relative movement from the prepare_dock_y position.
variable_docked_y: -43.5
# Distance to move the toolhead to the side when docking
variable_dock_x_distance: 10
# Where to move to in Y axis before docking or undocking. Absolute position.
variable_prepare_dock_y: 0

gcode:
  { action_respond_info("Toolchanger config") }

[gcode_macro TOOLCHANGER_STATUS]
description: Get the current tool
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if svv.toolchanger_current_tool is not defined or svv.toolchanger_current_tool|int < 0 %}
    { action_respond_info("No tool currently attached") }
  {% else %}
    { action_respond_info("Current tool: " ~  svv.toolchanger_current_tool) }
    { action_respond_info("Current tool docking position X: " ~ svv.toolchanger_current_tool_x) }
  {% endif %}

[gcode_macro TOOLCHANGER_RESET]
description: Reset the current state
gcode:
  SET_ACTIVE_TOOL T=-1 X=-1

[gcode_macro SET_ACTIVE_TOOL]
description: Set the tool that is currently attached
gcode:
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% elif params.X is not defined %}
    { action_raise_error("No X parameter provided") }
  {% endif %}
  SAVE_VARIABLE VARIABLE=toolchanger_current_tool VALUE={params.T}
  SAVE_VARIABLE VARIABLE=toolchanger_current_tool_x VALUE={params.X}

[gcode_macro CHANGE_TOOL]
description: Change to the specified tool
gcode:
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% elif params.X is not defined %}
    { action_raise_error("No X parameter provided") }
  {% endif %}
  {% set svv = printer.save_variables.variables %}
  {% if svv.toolchanger_current_tool is not defined %}
    TOOLCHANGER_RESET
  {% endif %}
  {% if params.T|int == svv.toolchanger_current_tool|int %}
    { action_respond_info("Tool " ~ params.T ~ " already loaded") }
  {% else %}
    SAVE_GCODE_STATE NAME=toolchange
    DETACH_CURRENT_TOOL RESTORE_POSITION=0
    ATTACH_TOOL T={params.T} X={params.X} RESTORE_POSITION=0
    RESTORE_GCODE_STATE NAME=toolchange MOVE=1 MOVE_SPEED=300
  {% endif %}

[gcode_macro ATTACH_TOOL]
description: Change to the specified tool
gcode:
  {% set docked_y = printer['gcode_macro TOOLCHANGER_CONFIG'].docked_y %}
  {% set prepare_dock_y = printer['gcode_macro TOOLCHANGER_CONFIG'].prepare_dock_y %}
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% elif params.X is not defined %}
    { action_raise_error("No X parameter provided") }
  {% endif %}
  {% set restore_position = params.RESTORE_POSITION|default("1")|int == 1 %}
  {% set svv = printer.save_variables.variables %}
  {% if svv.toolchanger_current_tool == -1 %}
    { action_respond_info("Attaching tool " ~ params.T ~ "...") }
    {% if restore_position %}
      SAVE_GCODE_STATE NAME=toolchange_attach
    {% endif %}

    # Fast move in front of the docking position
    G90
    G0 X{params.X} Y{prepare_dock_y} F20000

    # Slow move to dock
    G91
    G0 Y{ docked_y } F5000
    # Pull out to the side
    G0 X-{ printer['gcode_macro TOOLCHANGER_CONFIG'].dock_x_distance } F5000

    # Then pull back to the print zone
    G90
    G0 Y{prepare_dock_y} F5000

    SET_ACTIVE_TOOL T={params.T} X={params.X}
    {% if restore_position %}
      RESTORE_GCODE_STATE NAME=toolchange_attach MOVE=1 MOVE_SPEED=300
    {% endif %}

    VERIFY_TOOL_ATTACHED T={params.T}
  {% else %}
    { action_raise_error("Cannot attach tool when one is already attached") }
  {% endif %}

[gcode_macro DETACH_CURRENT_TOOL]
description: Detach current tool
gcode:
  {% set restore_position = params.RESTORE_POSITION|default("1")|int == 1 %}
  {% set docked_y = printer['gcode_macro TOOLCHANGER_CONFIG'].docked_y %}
  {% set prepare_dock_y = printer['gcode_macro TOOLCHANGER_CONFIG'].prepare_dock_y %}
  {% set svv = printer.save_variables.variables %}
  {% if svv.toolchanger_current_tool == -1 %}
    { action_respond_info("No current tool, skipping unattach") }
  {% else %}
    { action_respond_info("Unattaching tool " ~ params.T ~ "...") }
    {% if restore_position %}
      SAVE_GCODE_STATE NAME=toolchange_detach
    {% endif %}
    # Fast move to the side and in front of the docking position
    G90
    {% set dock_x_distance = printer['gcode_macro TOOLCHANGER_CONFIG'].dock_x_distance|float %}
    {% set undock_position = svv.toolchanger_current_tool_x - dock_x_distance %}
    G0 X{ undock_position } Y{prepare_dock_y} F20000

    G91
    # Slow move alongside tool dock
    G0 Y{ docked_y } F5000
    # Slow X move to undocking position
    G0 X{ dock_x_distance } F5000
    # Slow move back to the print zone
    G90
    G0 Y{prepare_dock_y} F5000

    SET_ACTIVE_TOOL T=-1 X=-1
    {% if restore_position %}
      RESTORE_GCODE_STATE NAME=toolchange_detach MOVE=1 MOVE_SPEED=300
    {% endif %}

    VERIFY_TOOL_DETACHED T={params.T}
  {% endif %}

[gcode_macro VERIFY_TOOL_ATTACHED]
description: Verify that the tool is attached by checking the state of the sensor
gcode:
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% endif %}
  {% set is_attached = printer["gcode_macro T" ~ params.T].is_attached == "True" %}
  {% if not is_attached %}
    PAUSE
    { action_respond_info("Tool " ~ params.T ~ " is not attached") }
    SET_DISPLAY_TEXT MSG="Tool {params.T} is not attached"
  {% endif %}

[gcode_macro VERIFY_TOOL_DETACHED]
description: Verify that the tool is detached by checking the state of the sensor
gcode:
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% endif %}
  {% set is_attached = printer["gcode_macro T" ~ params.T].is_attached == "True" %}
  {% if is_attached %}
    PAUSE
    { action_respond_info("Tool " ~ params.T ~ " is still attached") }
    SET_DISPLAY_TEXT MSG="Tool { params.T } is still attached"
  {% endif %}

[gcode_macro TOOLCHANGER_DOCKING_TEST]
description: Stress test the toolchanging
gcode:
  {% set n = params.N|default("10")|int %}
  G0 X250 Y235
  {% for i in range(n) %}
    { action_respond_info("Docking test: " ~ i) }
    T0
    M400
    T1
    M400
  {% endfor %}