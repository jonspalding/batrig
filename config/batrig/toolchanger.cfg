[gcode_macro TOOLCHANGER_CONFIG]
description: Set the toolchanger configuration
# Distance in Y in order to dock the toolhead. This is the relative movement from the prepare_dock_y position.
variable_docked_y: -44
# Distance to move the toolhead to the side when docking
variable_dock_x_distance: 10
# Where to move to in Y axis before docking or undocking. Absolute position.
variable_prepare_dock_y: 0
# the current tool, -2 means not configured, -1 means no tool attached
variable_current_tool: -2
# the current tool dock position x
variable_current_tool_x: 0

gcode:
  RESPOND MSG="Toolchanger config"

[gcode_macro TOOLCHANGER_STATUS]
description: Get the current tool
gcode:
  {% if printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool|int == -2 %}
    RESPOND MSG="Toolchanger not configured, reading current state..."
    TOOLCHANGER_RESET
  {% endif %}

  _TOOLCHANGER_STATUS

[gcode_macro _TOOLCHANGER_STATUS]
description: Get the current tool
gcode:
  {% if printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool|int == -1 %}
    RESPOND MSG="No tool currently attached"
  {% else %}
    RESPOND MSG="Current tool: { printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool }"
    RESPOND MSG="Current tool docking position X: { printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool_x }"
  {% endif %}


[gcode_macro TOOLCHANGER_RESET]
description: Reset the current state by checking the status of the attached buttons
gcode:
  SET_ACTIVE_TOOL T=-1 X=-1

  # check the state of the buttons to see which tool is attached
  {% for i in range(1) %}
    {% set attached = printer["gcode_button toolhead_attached_" ~ i].state == "PRESSED" %}
    {% if attached %}
      RESPOND MSG="Tool {i} is currently attached"
      SET_ACTIVE_TOOL T={i} X={ printer["gcode_macro T" ~ i].docked_x }
    {% else %}
      RESPOND MSG="Tool {i} is NOT attached"
    {% endif %}
  {% endfor %}

[gcode_macro SET_ACTIVE_TOOL]
description: Set the tool that is currently attached
gcode:
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% elif params.X is not defined %}
    { action_raise_error("No X parameter provided") }
  {% endif %}
  SET_GCODE_VARIABLE MACRO=TOOLCHANGER_CONFIG VARIABLE=current_tool VALUE={params.T}
  SET_GCODE_VARIABLE MACRO=TOOLCHANGER_CONFIG VARIABLE=current_tool_x VALUE={params.X}

[gcode_macro CHANGE_TOOL]
description: Change to the specified tool
gcode:
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% elif params.X is not defined %}
    { action_raise_error("No X parameter provided") }
  {% endif %}
  {% if printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool == -2 %}
    TOOLCHANGER_RESET
  {% endif %}
  {% if params.T|int == printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool|int %}
    RESPOND MSG="Tool { params.T } already loaded"
  {% else %}
    SAVE_GCODE_STATE NAME=toolchange
    DETACH_CURRENT_TOOL RESTORE_POSITION=0

    ATTACH_TOOL T={params.T} X={params.X} RESTORE_POSITION=0
    RESTORE_GCODE_STATE NAME=toolchange MOVE=1 MOVE_SPEED=300
  {% endif %}

[gcode_macro ATTACH_TOOL]
description: Change to the specified tool
gcode:
  {% set docked_y = printer['gcode_macro TOOLCHANGER_CONFIG'].docked_y %}
  {% set prepare_dock_y = printer['gcode_macro TOOLCHANGER_CONFIG'].prepare_dock_y %}
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% elif params.X is not defined %}
    { action_raise_error("No X parameter provided") }
  {% endif %}
  {% set restore_position = params.RESTORE_POSITION|default("1")|int == 1 %}
  {% if printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool == -1 %}
    RESPOND MSG="Attaching tool { params.T }..."
    {% if restore_position %}
      SAVE_GCODE_STATE NAME=toolchange_attach
    {% endif %}

    G90
    # get the current y value
    {% set current_y = printer.toolhead.position.y|float %}
    # move out of the dock zone if we are already in it so we don't do
    # any sideways moves and crash into the dock
    {% if current_y < prepare_dock_y|float %}
      G0 Y{prepare_dock_y} F20000
    {% endif %}

    # Fast move in front of the docking position
    G0 X{params.X} Y{prepare_dock_y} F20000

    # Slow move to dock
    G91
    G0 Y{ docked_y } F5000
    # Pull out to the side
    G0 X-{ printer['gcode_macro TOOLCHANGER_CONFIG'].dock_x_distance } F5000

    # Check the tool is attached
    M400
    VERIFY_TOOL_ATTACHED T={params.T}

    # Then pull back to the print zone
    G90
    G0 Y{prepare_dock_y} F5000

    SET_ACTIVE_TOOL T={params.T} X={params.X}

    {% if restore_position %}
      RESTORE_GCODE_STATE NAME=toolchange_attach MOVE=1 MOVE_SPEED=300
    {% endif %}
  {% else %}
    { action_raise_error("Cannot attach tool when one is already attached") }
  {% endif %}

[gcode_macro DETACH_CURRENT_TOOL]
description: Detach current tool
gcode:
  {% set restore_position = params.RESTORE_POSITION|default("1")|int == 1 %}
  {% set docked_y = printer['gcode_macro TOOLCHANGER_CONFIG'].docked_y %}
  {% set prepare_dock_y = printer['gcode_macro TOOLCHANGER_CONFIG'].prepare_dock_y %}
  {% if printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool == -1 %}
    RESPOND MSG="No current tool, skipping detach"
  {% else %}
    {% set current_tool = printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool %}
    RESPOND MSG="Detaching tool { current_tool }..."
    {% if restore_position %}
      SAVE_GCODE_STATE NAME=toolchange_detach
    {% endif %}

    {% set current_y = printer.toolhead.position.y|float %}
    # move out of the dock zone if we are already in it so we don't do
    # any sideways moves and crash into the dock
    {% if current_y < prepare_dock_y|float %}
      G0 Y{prepare_dock_y} F20000
    {% endif %}

    # Fast move to the side and in front of the docking position
    G90
    {% set dock_x_distance = printer['gcode_macro TOOLCHANGER_CONFIG'].dock_x_distance|float %}
    {% set undock_position = printer["gcode_macro TOOLCHANGER_CONFIG"].current_tool_x - dock_x_distance %}
    G0 X{ undock_position } Y{prepare_dock_y} F20000

    G91
    # Slow move alongside tool dock
    G0 Y{ docked_y } F5000
    # Slow X move to undocking position
    G0 X{ dock_x_distance } F5000

    M400
    VERIFY_TOOL_DETACHED T={current_tool}

    # Slow move back to the print zone
    G90
    G0 Y{prepare_dock_y} F5000

    SET_ACTIVE_TOOL T=-1 X=-1

    {% if restore_position %}
      RESTORE_GCODE_STATE NAME=toolchange_detach MOVE=1 MOVE_SPEED=300
    {% endif %}
  {% endif %}

[gcode_macro VERIFY_TOOL_ATTACHED]
description: Verify that the tool is attached
gcode:
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% endif %}
  {% set is_attached = printer["gcode_button toolhead_attached_" ~ params.T].state == "PRESSED" %}
  {% if not is_attached %}
    PAUSE
    { action_raise_error("Tool " ~ params.T ~ " is not attached") }
  {% endif %}

[gcode_macro VERIFY_TOOL_DETACHED]
description: Verify that the tool is detached
gcode:
  {% if params.T is not defined %}
    { action_raise_error("No T parameter provided") }
  {% endif %}
  {% set is_attached = printer["gcode_button toolhead_attached_" ~ params.T].state == "PRESSED" %}
  {% if is_attached %}
    PAUSE
    { action_raise_error("Tool " ~ params.T ~ " is still attached") }
  {% endif %}

[gcode_macro TOOLCHANGER_DOCKING_TEST]
description: Stress test the toolchanging
gcode:
  {% set n = params.N|default("10")|int %}
  TOOLCHANGER_RESET
  G90
  G0 X250 Y235
  {% for i in range(n) %}
    RESPOND MSG="[TOOLCHANGER_DOCKING_TEST] Test {i}"
    T0
    M400
    DETACH_CURRENT_TOOL
    M400
  {% endfor %}
